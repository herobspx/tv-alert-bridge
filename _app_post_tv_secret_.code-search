# Query: @app.post("/tv/{secret}")\n
# ContextLines: 1

1 result - 1 file

~/alert-bridge/app.py:
  23  
  24: from fastapi import FastAPI, Request, HTTPException
from dotenv import load_dotenv
import os, httpx, html

load_dotenv()
app = FastAPI()

BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
CHAT_IDS = os.getenv("TELEGRAM_CHAT_IDS", "").split(",")
ALERT_SECRET = os.getenv("ALERT_SECRET")

TG_API = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"

@app.post("/tv/{secret}")
async def tv_alert(secret: str, request: Request):
    if secret != ALERT_SECRET:
        raise HTTPException(status_code=401, detail="Invalid secret")

    data = await request.json()
    ticker   = (data.get("ticker") or "Unknown").upper()
    price    = data.get("close", "N/A")
    # ثبّت الفريم على 1H كقيمة افتراضية (ولو وصل من TV نعرضه كما هو)
    interval = (data.get("interval") or "1H")
    side_raw = (data.get("side") or "").upper().strip()

    # تحديد نوع الإشارة
    if side_raw in ["BUY", "CALL", "1", "LONG"]:
        side = "📗 CALL (شراء)"
    elif side_raw in ["SELL", "PUT", "-1", "SHORT"]:
        side = "📕 PUT (بيع)"
    else:
        side = "⚪ غير محدد"

    # رسالة مختصرة احترافية: الشركة + الفريم + الإشارة + السعر (بدون ملاحظة وبدون Baz)
    msg = (
        f"📊 <b>{ticker}</b>\n"
        f"🕓 الفريم: <b>{interval}</b>\n"
        f"🔔 نوع الإشارة: <b>{side}</b>\n"
        f"💰 السعر الحالي: <b>{price}</b>"
    )

    async with httpx.AsyncClient(timeout=10) as client:
        for cid in CHAT_IDS:
            await client.post(TG_API, json={
                "chat_id": cid.strip(),
                "text": msg,
                "parse_mode": "HTML",
                "disable_web_page_preview": True
            })

    return {"ok": True}

